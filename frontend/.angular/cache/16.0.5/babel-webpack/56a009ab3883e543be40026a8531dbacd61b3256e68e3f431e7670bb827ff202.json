{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  login(email, password) {\n    return this.http.post('/api/login', {\n      email,\n      password\n    });\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthService };","map":{"version":3,"names":["AuthService","constructor","http","login","email","password","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ignacio.lima\\Desktop\\facultad\\Desarrollo web\\git\\jwt-tutorial\\src\\app\\auth-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from './user';\nimport { shareReplay } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private http: HttpClient) {}\n\n  login(email: string, password: string) {\n    return this.http.post<User>('/api/login', { email, password });\n  }\n}\n"],"mappings":";;AAKA,MAGaA,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,KAAKA,CAACC,KAAa,EAAEC,QAAgB;IACnC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAO,YAAY,EAAE;MAAEF,KAAK;MAAEC;IAAQ,CAAE,CAAC;EAChE;;AALWL,WAAW,C;mBAAXA,WAAW,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXV,WAAW,C;SAAXA,WAAW;EAAAW,OAAA,EAAXX,WAAW,CAAAY,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPb,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}